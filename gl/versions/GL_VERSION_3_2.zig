// generated code
pub const GLenum = c_uint;
pub const GLboolean = c_uint;
pub const GLuint = c_uint;
pub const GLint = c_int;
pub const GLsizei = isize;
pub const GLfloat = f32;
pub const GLdouble = f64;
pub const GLbitfield = c_uint;
pub const GLubyte = u8;
pub const GLbyte = i8;
pub const GLushort = u16;
pub const GLshort = i16;

pub const VERSION: GLenum = 0x1F02;

cullFace: extern fn (mode: GLenum) void,
frontFace: extern fn (mode: GLenum) void,
hint: extern fn (target: GLenum, mode: GLenum) void,
lineWidth: extern fn (width: GLfloat) void,
pointSize: extern fn (size: GLfloat) void,
polygonMode: extern fn (face: GLenum, mode: GLenum) void,
scissor: extern fn (x: GLint, y: GLint, width: GLsizei, height: GLsizei) void,
texParameterf: extern fn (target: GLenum, pname: GLenum, param: GLfloat) void,
texParameterfv: extern fn (target: GLenum, pname: GLenum, params: [*c] GLfloat) void,
texParameteri: extern fn (target: GLenum, pname: GLenum, param: GLint) void,
texParameteriv: extern fn (target: GLenum, pname: GLenum, params: [*c] GLint) void,
texImage1D: extern fn (target: GLenum, level: GLint, internalformat: GLint, width: GLsizei, border: GLint, format: GLenum, type: GLenum, pixels: ?*const c_void) void,
texImage2D: extern fn (target: GLenum, level: GLint, internalformat: GLint, width: GLsizei, height: GLsizei, border: GLint, format: GLenum, type: GLenum, pixels: ?*const c_void) void,
drawBuffer: extern fn (buf: GLenum) void,
clear: extern fn (mask: GLbitfield) void,
clearColor: extern fn (red: GLfloat, green: GLfloat, blue: GLfloat, alpha: GLfloat) void,
clearStencil: extern fn (s: GLint) void,
clearDepth: extern fn (depth: GLdouble) void,
stencilMask: extern fn (mask: GLuint) void,
colorMask: extern fn (red: GLboolean, green: GLboolean, blue: GLboolean, alpha: GLboolean) void,
depthMask: extern fn (flag: GLboolean) void,
disable: extern fn (cap: GLenum) void,
enable: extern fn (cap: GLenum) void,
finish: extern fn () void,
flush: extern fn () void,
blendFunc: extern fn (sfactor: GLenum, dfactor: GLenum) void,
logicOp: extern fn (opcode: GLenum) void,
stencilFunc: extern fn (func: GLenum, ref: GLint, mask: GLuint) void,
stencilOp: extern fn (fail: GLenum, zfail: GLenum, zpass: GLenum) void,
depthFunc: extern fn (func: GLenum) void,
pixelStoref: extern fn (pname: GLenum, param: GLfloat) void,
pixelStorei: extern fn (pname: GLenum, param: GLint) void,
readBuffer: extern fn (src: GLenum) void,
readPixels: extern fn (x: GLint, y: GLint, width: GLsizei, height: GLsizei, format: GLenum, type: GLenum, pixels: ?*c_void) void,
getBooleanv: extern fn (pname: GLenum, data: [*c] GLboolean) void,
getDoublev: extern fn (pname: GLenum, data: [*c] GLdouble) void,
getError: extern fn () GLenum,
getFloatv: extern fn (pname: GLenum, data: [*c] GLfloat) void,
getIntegerv: extern fn (pname: GLenum, data: [*c] GLint) void,
getString: extern fn (name: GLenum) [*c] GLubyte,
getTexImage: extern fn (target: GLenum, level: GLint, format: GLenum, type: GLenum, pixels: ?*c_void) void,
getTexParameterfv: extern fn (target: GLenum, pname: GLenum, params: [*c] GLfloat) void,
getTexParameteriv: extern fn (target: GLenum, pname: GLenum, params: [*c] GLint) void,
getTexLevelParameterfv: extern fn (target: GLenum, level: GLint, pname: GLenum, params: [*c] GLfloat) void,
getTexLevelParameteriv: extern fn (target: GLenum, level: GLint, pname: GLenum, params: [*c] GLint) void,
isEnabled: extern fn (cap: GLenum) GLboolean,
depthRange: extern fn (n: GLdouble, f: GLdouble) void,
viewport: extern fn (x: GLint, y: GLint, width: GLsizei, height: GLsizei) void,
drawArrays: extern fn (mode: GLenum, first: GLint, count: GLsizei) void,
drawElements: extern fn (mode: GLenum, count: GLsizei, type: GLenum, indices: ?*const c_void) void,
getPointerv: extern fn (pname: GLenum, params: ?**c_void) void,
polygonOffset: extern fn (factor: GLfloat, units: GLfloat) void,
copyTexImage1D: extern fn (target: GLenum, level: GLint, internalformat: GLenum, x: GLint, y: GLint, width: GLsizei, border: GLint) void,
copyTexImage2D: extern fn (target: GLenum, level: GLint, internalformat: GLenum, x: GLint, y: GLint, width: GLsizei, height: GLsizei, border: GLint) void,
copyTexSubImage1D: extern fn (target: GLenum, level: GLint, xoffset: GLint, x: GLint, y: GLint, width: GLsizei) void,
copyTexSubImage2D: extern fn (target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, x: GLint, y: GLint, width: GLsizei, height: GLsizei) void,
texSubImage1D: extern fn (target: GLenum, level: GLint, xoffset: GLint, width: GLsizei, format: GLenum, type: GLenum, pixels: ?*const c_void) void,
texSubImage2D: extern fn (target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, width: GLsizei, height: GLsizei, format: GLenum, type: GLenum, pixels: ?*const c_void) void,
bindTexture: extern fn (target: GLenum, texture: GLuint) void,
deleteTextures: extern fn (n: GLsizei, textures: [*c] GLuint) void,
genTextures: extern fn (n: GLsizei, textures: [*c] GLuint) void,
isTexture: extern fn (texture: GLuint) GLboolean,
arrayElement: extern fn (i: GLint) void,
colorPointer: extern fn (size: GLint, type: GLenum, stride: GLsizei, pointer: ?*const c_void) void,
disableClientState: extern fn (array: GLenum) void,
edgeFlagPointer: extern fn (stride: GLsizei, pointer: ?*const c_void) void,
enableClientState: extern fn (array: GLenum) void,
indexPointer: extern fn (type: GLenum, stride: GLsizei, pointer: ?*const c_void) void,
interleavedArrays: extern fn (format: GLenum, stride: GLsizei, pointer: ?*const c_void) void,
normalPointer: extern fn (type: GLenum, stride: GLsizei, pointer: ?*const c_void) void,
texCoordPointer: extern fn (size: GLint, type: GLenum, stride: GLsizei, pointer: ?*const c_void) void,
vertexPointer: extern fn (size: GLint, type: GLenum, stride: GLsizei, pointer: ?*const c_void) void,
areTexturesResident: extern fn (n: GLsizei, textures: [*c] GLuint, residences: [*c] GLboolean) GLboolean,
prioritizeTextures: extern fn (n: GLsizei, textures: [*c] GLuint, priorities: [*c] GLfloat) void,
indexub: extern fn (c: GLubyte) void,
indexubv: extern fn (c: [*c] GLubyte) void,
popClientAttrib: extern fn () void,
pushClientAttrib: extern fn (mask: GLbitfield) void,
drawRangeElements: extern fn (mode: GLenum, start: GLuint, end: GLuint, count: GLsizei, type: GLenum, indices: ?*const c_void) void,
texImage3D: extern fn (target: GLenum, level: GLint, internalformat: GLint, width: GLsizei, height: GLsizei, depth: GLsizei, border: GLint, format: GLenum, type: GLenum, pixels: ?*const c_void) void,
texSubImage3D: extern fn (target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, zoffset: GLint, width: GLsizei, height: GLsizei, depth: GLsizei, format: GLenum, type: GLenum, pixels: ?*const c_void) void,
copyTexSubImage3D: extern fn (target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, zoffset: GLint, x: GLint, y: GLint, width: GLsizei, height: GLsizei) void,
activeTexture: extern fn (texture: GLenum) void,
sampleCoverage: extern fn (value: GLfloat, invert: GLboolean) void,
compressedTexImage3D: extern fn (target: GLenum, level: GLint, internalformat: GLenum, width: GLsizei, height: GLsizei, depth: GLsizei, border: GLint, imageSize: GLsizei, data: ?*const c_void) void,
compressedTexImage2D: extern fn (target: GLenum, level: GLint, internalformat: GLenum, width: GLsizei, height: GLsizei, border: GLint, imageSize: GLsizei, data: ?*const c_void) void,
compressedTexImage1D: extern fn (target: GLenum, level: GLint, internalformat: GLenum, width: GLsizei, border: GLint, imageSize: GLsizei, data: ?*const c_void) void,
compressedTexSubImage3D: extern fn (target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, zoffset: GLint, width: GLsizei, height: GLsizei, depth: GLsizei, format: GLenum, imageSize: GLsizei, data: ?*const c_void) void,
compressedTexSubImage2D: extern fn (target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, width: GLsizei, height: GLsizei, format: GLenum, imageSize: GLsizei, data: ?*const c_void) void,
compressedTexSubImage1D: extern fn (target: GLenum, level: GLint, xoffset: GLint, width: GLsizei, format: GLenum, imageSize: GLsizei, data: ?*const c_void) void,
getCompressedTexImage: extern fn (target: GLenum, level: GLint, img: ?*c_void) void,
clientActiveTexture: extern fn (texture: GLenum) void,
multiTexCoord1d: extern fn (target: GLenum, s: GLdouble) void,
multiTexCoord1dv: extern fn (target: GLenum, v: [*c] GLdouble) void,
multiTexCoord1f: extern fn (target: GLenum, s: GLfloat) void,
multiTexCoord1fv: extern fn (target: GLenum, v: [*c] GLfloat) void,
multiTexCoord1i: extern fn (target: GLenum, s: GLint) void,
multiTexCoord1iv: extern fn (target: GLenum, v: [*c] GLint) void,
multiTexCoord1s: extern fn (target: GLenum, s: GLshort) void,
multiTexCoord1sv: extern fn (target: GLenum, v: [*c] GLshort) void,
multiTexCoord2d: extern fn (target: GLenum, s: GLdouble, t: GLdouble) void,
multiTexCoord2dv: extern fn (target: GLenum, v: [*c] GLdouble) void,
multiTexCoord2f: extern fn (target: GLenum, s: GLfloat, t: GLfloat) void,
multiTexCoord2fv: extern fn (target: GLenum, v: [*c] GLfloat) void,
multiTexCoord2i: extern fn (target: GLenum, s: GLint, t: GLint) void,
multiTexCoord2iv: extern fn (target: GLenum, v: [*c] GLint) void,
multiTexCoord2s: extern fn (target: GLenum, s: GLshort, t: GLshort) void,
multiTexCoord2sv: extern fn (target: GLenum, v: [*c] GLshort) void,
multiTexCoord3d: extern fn (target: GLenum, s: GLdouble, t: GLdouble, r: GLdouble) void,
multiTexCoord3dv: extern fn (target: GLenum, v: [*c] GLdouble) void,
multiTexCoord3f: extern fn (target: GLenum, s: GLfloat, t: GLfloat, r: GLfloat) void,
multiTexCoord3fv: extern fn (target: GLenum, v: [*c] GLfloat) void,
multiTexCoord3i: extern fn (target: GLenum, s: GLint, t: GLint, r: GLint) void,
multiTexCoord3iv: extern fn (target: GLenum, v: [*c] GLint) void,
multiTexCoord3s: extern fn (target: GLenum, s: GLshort, t: GLshort, r: GLshort) void,
multiTexCoord3sv: extern fn (target: GLenum, v: [*c] GLshort) void,
multiTexCoord4d: extern fn (target: GLenum, s: GLdouble, t: GLdouble, r: GLdouble, q: GLdouble) void,
multiTexCoord4dv: extern fn (target: GLenum, v: [*c] GLdouble) void,
multiTexCoord4f: extern fn (target: GLenum, s: GLfloat, t: GLfloat, r: GLfloat, q: GLfloat) void,
multiTexCoord4fv: extern fn (target: GLenum, v: [*c] GLfloat) void,
multiTexCoord4i: extern fn (target: GLenum, s: GLint, t: GLint, r: GLint, q: GLint) void,
multiTexCoord4iv: extern fn (target: GLenum, v: [*c] GLint) void,
multiTexCoord4s: extern fn (target: GLenum, s: GLshort, t: GLshort, r: GLshort, q: GLshort) void,
multiTexCoord4sv: extern fn (target: GLenum, v: [*c] GLshort) void,
loadTransposeMatrixf: extern fn (m: [*c] GLfloat) void,
loadTransposeMatrixd: extern fn (m: [*c] GLdouble) void,
multTransposeMatrixf: extern fn (m: [*c] GLfloat) void,
multTransposeMatrixd: extern fn (m: [*c] GLdouble) void,
blendFuncSeparate: extern fn (sfactorRGB: GLenum, dfactorRGB: GLenum, sfactorAlpha: GLenum, dfactorAlpha: GLenum) void,
multiDrawArrays: extern fn (mode: GLenum, first: [*c] GLint, count: [*c] GLsizei, drawcount: GLsizei) void,
multiDrawElements: extern fn (mode: GLenum, count: [*c] GLsizei, type: GLenum, indices: const void [*c]const[*c], drawcount: GLsizei) void,
pointParameterf: extern fn (pname: GLenum, param: GLfloat) void,
pointParameterfv: extern fn (pname: GLenum, params: [*c] GLfloat) void,
pointParameteri: extern fn (pname: GLenum, param: GLint) void,
pointParameteriv: extern fn (pname: GLenum, params: [*c] GLint) void,
fogCoordf: extern fn (coord: GLfloat) void,
fogCoordfv: extern fn (coord: [*c] GLfloat) void,
fogCoordd: extern fn (coord: GLdouble) void,
fogCoorddv: extern fn (coord: [*c] GLdouble) void,
fogCoordPointer: extern fn (type: GLenum, stride: GLsizei, pointer: ?*const c_void) void,
secondaryColor3b: extern fn (red: GLbyte, green: GLbyte, blue: GLbyte) void,
secondaryColor3bv: extern fn (v: [*c] GLbyte) void,
secondaryColor3d: extern fn (red: GLdouble, green: GLdouble, blue: GLdouble) void,
secondaryColor3dv: extern fn (v: [*c] GLdouble) void,
secondaryColor3f: extern fn (red: GLfloat, green: GLfloat, blue: GLfloat) void,
secondaryColor3fv: extern fn (v: [*c] GLfloat) void,
secondaryColor3i: extern fn (red: GLint, green: GLint, blue: GLint) void,
secondaryColor3iv: extern fn (v: [*c] GLint) void,
secondaryColor3s: extern fn (red: GLshort, green: GLshort, blue: GLshort) void,
secondaryColor3sv: extern fn (v: [*c] GLshort) void,
secondaryColor3ub: extern fn (red: GLubyte, green: GLubyte, blue: GLubyte) void,
secondaryColor3ubv: extern fn (v: [*c] GLubyte) void,
secondaryColor3ui: extern fn (red: GLuint, green: GLuint, blue: GLuint) void,
secondaryColor3uiv: extern fn (v: [*c] GLuint) void,
secondaryColor3us: extern fn (red: GLushort, green: GLushort, blue: GLushort) void,
secondaryColor3usv: extern fn (v: [*c] GLushort) void,
secondaryColorPointer: extern fn (size: GLint, type: GLenum, stride: GLsizei, pointer: ?*const c_void) void,
windowPos2d: extern fn (x: GLdouble, y: GLdouble) void,
windowPos2dv: extern fn (v: [*c] GLdouble) void,
windowPos2f: extern fn (x: GLfloat, y: GLfloat) void,
windowPos2fv: extern fn (v: [*c] GLfloat) void,
windowPos2i: extern fn (x: GLint, y: GLint) void,
windowPos2iv: extern fn (v: [*c] GLint) void,
windowPos2s: extern fn (x: GLshort, y: GLshort) void,
windowPos2sv: extern fn (v: [*c] GLshort) void,
windowPos3d: extern fn (x: GLdouble, y: GLdouble, z: GLdouble) void,
windowPos3dv: extern fn (v: [*c] GLdouble) void,
windowPos3f: extern fn (x: GLfloat, y: GLfloat, z: GLfloat) void,
windowPos3fv: extern fn (v: [*c] GLfloat) void,
windowPos3i: extern fn (x: GLint, y: GLint, z: GLint) void,
windowPos3iv: extern fn (v: [*c] GLint) void,
windowPos3s: extern fn (x: GLshort, y: GLshort, z: GLshort) void,
windowPos3sv: extern fn (v: [*c] GLshort) void,
genQueries: extern fn (n: GLsizei, ids: [*c] GLuint) void,
deleteQueries: extern fn (n: GLsizei, ids: [*c] GLuint) void,
isQuery: extern fn (id: GLuint) GLboolean,
beginQuery: extern fn (target: GLenum, id: GLuint) void,
endQuery: extern fn (target: GLenum) void,
getQueryiv: extern fn (target: GLenum, pname: GLenum, params: [*c] GLint) void,
getQueryObjectiv: extern fn (id: GLuint, pname: GLenum, params: [*c] GLint) void,
getQueryObjectuiv: extern fn (id: GLuint, pname: GLenum, params: [*c] GLuint) void,
bindBuffer: extern fn (target: GLenum, buffer: GLuint) void,
deleteBuffers: extern fn (n: GLsizei, buffers: [*c] GLuint) void,
genBuffers: extern fn (n: GLsizei, buffers: [*c] GLuint) void,
isBuffer: extern fn (buffer: GLuint) GLboolean,
bufferData: extern fn (target: GLenum, size: GLsizeiptr, data: ?*const c_void, usage: GLenum) void,
bufferSubData: extern fn (target: GLenum, offset: GLintptr, size: GLsizeiptr, data: ?*const c_void) void,
getBufferSubData: extern fn (target: GLenum, offset: GLintptr, size: GLsizeiptr, data: ?*c_void) void,
mapBuffer: extern fn (target: GLenum, access: GLenum) ?*c_void,
unmapBuffer: extern fn (target: GLenum) GLboolean,
getBufferParameteriv: extern fn (target: GLenum, pname: GLenum, params: [*c] GLint) void,
getBufferPointerv: extern fn (target: GLenum, pname: GLenum, params: ?**c_void) void,
blendEquationSeparate: extern fn (modeRGB: GLenum, modeAlpha: GLenum) void,
drawBuffers: extern fn (n: GLsizei, bufs: [*c] GLenum) void,
stencilOpSeparate: extern fn (face: GLenum, sfail: GLenum, dpfail: GLenum, dppass: GLenum) void,
stencilFuncSeparate: extern fn (face: GLenum, func: GLenum, ref: GLint, mask: GLuint) void,
stencilMaskSeparate: extern fn (face: GLenum, mask: GLuint) void,
attachShader: extern fn (program: GLuint, shader: GLuint) void,
bindAttribLocation: extern fn (program: GLuint, index: GLuint, name: [*c] GLchar) void,
compileShader: extern fn (shader: GLuint) void,
createProgram: extern fn () GLuint,
createShader: extern fn (type: GLenum) GLuint,
deleteProgram: extern fn (program: GLuint) void,
deleteShader: extern fn (shader: GLuint) void,
detachShader: extern fn (program: GLuint, shader: GLuint) void,
disableVertexAttribArray: extern fn (index: GLuint) void,
enableVertexAttribArray: extern fn (index: GLuint) void,
getActiveAttrib: extern fn (program: GLuint, index: GLuint, bufSize: GLsizei, length: [*c] GLsizei, size: [*c] GLint, type: [*c] GLenum, name: [*c] GLchar) void,
getActiveUniform: extern fn (program: GLuint, index: GLuint, bufSize: GLsizei, length: [*c] GLsizei, size: [*c] GLint, type: [*c] GLenum, name: [*c] GLchar) void,
getAttachedShaders: extern fn (program: GLuint, maxCount: GLsizei, count: [*c] GLsizei, shaders: [*c] GLuint) void,
getAttribLocation: extern fn (program: GLuint, name: [*c] GLchar) GLint,
getProgramiv: extern fn (program: GLuint, pname: GLenum, params: [*c] GLint) void,
getProgramInfoLog: extern fn (program: GLuint, bufSize: GLsizei, length: [*c] GLsizei, infoLog: [*c] GLchar) void,
getShaderiv: extern fn (shader: GLuint, pname: GLenum, params: [*c] GLint) void,
getShaderInfoLog: extern fn (shader: GLuint, bufSize: GLsizei, length: [*c] GLsizei, infoLog: [*c] GLchar) void,
getShaderSource: extern fn (shader: GLuint, bufSize: GLsizei, length: [*c] GLsizei, source: [*c] GLchar) void,
getUniformLocation: extern fn (program: GLuint, name: [*c] GLchar) GLint,
getUniformfv: extern fn (program: GLuint, location: GLint, params: [*c] GLfloat) void,
getUniformiv: extern fn (program: GLuint, location: GLint, params: [*c] GLint) void,
getVertexAttribdv: extern fn (index: GLuint, pname: GLenum, params: [*c] GLdouble) void,
getVertexAttribfv: extern fn (index: GLuint, pname: GLenum, params: [*c] GLfloat) void,
getVertexAttribiv: extern fn (index: GLuint, pname: GLenum, params: [*c] GLint) void,
getVertexAttribPointerv: extern fn (index: GLuint, pname: GLenum, pointer: ?**c_void) void,
isProgram: extern fn (program: GLuint) GLboolean,
isShader: extern fn (shader: GLuint) GLboolean,
linkProgram: extern fn (program: GLuint) void,
shaderSource: extern fn (shader: GLuint, count: GLsizei, string: [*c]const[*c] GLchar, length: [*c] GLint) void,
useProgram: extern fn (program: GLuint) void,
uniform1f: extern fn (location: GLint, v0: GLfloat) void,
uniform2f: extern fn (location: GLint, v0: GLfloat, v1: GLfloat) void,
uniform3f: extern fn (location: GLint, v0: GLfloat, v1: GLfloat, v2: GLfloat) void,
uniform4f: extern fn (location: GLint, v0: GLfloat, v1: GLfloat, v2: GLfloat, v3: GLfloat) void,
uniform1i: extern fn (location: GLint, v0: GLint) void,
uniform2i: extern fn (location: GLint, v0: GLint, v1: GLint) void,
uniform3i: extern fn (location: GLint, v0: GLint, v1: GLint, v2: GLint) void,
uniform4i: extern fn (location: GLint, v0: GLint, v1: GLint, v2: GLint, v3: GLint) void,
uniform1fv: extern fn (location: GLint, count: GLsizei, value: [*c] GLfloat) void,
uniform2fv: extern fn (location: GLint, count: GLsizei, value: [*c] GLfloat) void,
uniform3fv: extern fn (location: GLint, count: GLsizei, value: [*c] GLfloat) void,
uniform4fv: extern fn (location: GLint, count: GLsizei, value: [*c] GLfloat) void,
uniform1iv: extern fn (location: GLint, count: GLsizei, value: [*c] GLint) void,
uniform2iv: extern fn (location: GLint, count: GLsizei, value: [*c] GLint) void,
uniform3iv: extern fn (location: GLint, count: GLsizei, value: [*c] GLint) void,
uniform4iv: extern fn (location: GLint, count: GLsizei, value: [*c] GLint) void,
uniformMatrix2fv: extern fn (location: GLint, count: GLsizei, transpose: GLboolean, value: [*c] GLfloat) void,
uniformMatrix3fv: extern fn (location: GLint, count: GLsizei, transpose: GLboolean, value: [*c] GLfloat) void,
uniformMatrix4fv: extern fn (location: GLint, count: GLsizei, transpose: GLboolean, value: [*c] GLfloat) void,
validateProgram: extern fn (program: GLuint) void,
vertexAttrib1d: extern fn (index: GLuint, x: GLdouble) void,
vertexAttrib1dv: extern fn (index: GLuint, v: [*c] GLdouble) void,
vertexAttrib1f: extern fn (index: GLuint, x: GLfloat) void,
vertexAttrib1fv: extern fn (index: GLuint, v: [*c] GLfloat) void,
vertexAttrib1s: extern fn (index: GLuint, x: GLshort) void,
vertexAttrib1sv: extern fn (index: GLuint, v: [*c] GLshort) void,
vertexAttrib2d: extern fn (index: GLuint, x: GLdouble, y: GLdouble) void,
vertexAttrib2dv: extern fn (index: GLuint, v: [*c] GLdouble) void,
vertexAttrib2f: extern fn (index: GLuint, x: GLfloat, y: GLfloat) void,
vertexAttrib2fv: extern fn (index: GLuint, v: [*c] GLfloat) void,
vertexAttrib2s: extern fn (index: GLuint, x: GLshort, y: GLshort) void,
vertexAttrib2sv: extern fn (index: GLuint, v: [*c] GLshort) void,
vertexAttrib3d: extern fn (index: GLuint, x: GLdouble, y: GLdouble, z: GLdouble) void,
vertexAttrib3dv: extern fn (index: GLuint, v: [*c] GLdouble) void,
vertexAttrib3f: extern fn (index: GLuint, x: GLfloat, y: GLfloat, z: GLfloat) void,
vertexAttrib3fv: extern fn (index: GLuint, v: [*c] GLfloat) void,
vertexAttrib3s: extern fn (index: GLuint, x: GLshort, y: GLshort, z: GLshort) void,
vertexAttrib3sv: extern fn (index: GLuint, v: [*c] GLshort) void,
vertexAttrib4Nbv: extern fn (index: GLuint, v: [*c] GLbyte) void,
vertexAttrib4Niv: extern fn (index: GLuint, v: [*c] GLint) void,
vertexAttrib4Nsv: extern fn (index: GLuint, v: [*c] GLshort) void,
vertexAttrib4Nub: extern fn (index: GLuint, x: GLubyte, y: GLubyte, z: GLubyte, w: GLubyte) void,
vertexAttrib4Nubv: extern fn (index: GLuint, v: [*c] GLubyte) void,
vertexAttrib4Nuiv: extern fn (index: GLuint, v: [*c] GLuint) void,
vertexAttrib4Nusv: extern fn (index: GLuint, v: [*c] GLushort) void,
vertexAttrib4bv: extern fn (index: GLuint, v: [*c] GLbyte) void,
vertexAttrib4d: extern fn (index: GLuint, x: GLdouble, y: GLdouble, z: GLdouble, w: GLdouble) void,
vertexAttrib4dv: extern fn (index: GLuint, v: [*c] GLdouble) void,
vertexAttrib4f: extern fn (index: GLuint, x: GLfloat, y: GLfloat, z: GLfloat, w: GLfloat) void,
vertexAttrib4fv: extern fn (index: GLuint, v: [*c] GLfloat) void,
vertexAttrib4iv: extern fn (index: GLuint, v: [*c] GLint) void,
vertexAttrib4s: extern fn (index: GLuint, x: GLshort, y: GLshort, z: GLshort, w: GLshort) void,
vertexAttrib4sv: extern fn (index: GLuint, v: [*c] GLshort) void,
vertexAttrib4ubv: extern fn (index: GLuint, v: [*c] GLubyte) void,
vertexAttrib4uiv: extern fn (index: GLuint, v: [*c] GLuint) void,
vertexAttrib4usv: extern fn (index: GLuint, v: [*c] GLushort) void,
vertexAttribPointer: extern fn (index: GLuint, size: GLint, type: GLenum, normalized: GLboolean, stride: GLsizei, pointer: ?*const c_void) void,
uniformMatrix2x3fv: extern fn (location: GLint, count: GLsizei, transpose: GLboolean, value: [*c] GLfloat) void,
uniformMatrix3x2fv: extern fn (location: GLint, count: GLsizei, transpose: GLboolean, value: [*c] GLfloat) void,
uniformMatrix2x4fv: extern fn (location: GLint, count: GLsizei, transpose: GLboolean, value: [*c] GLfloat) void,
uniformMatrix4x2fv: extern fn (location: GLint, count: GLsizei, transpose: GLboolean, value: [*c] GLfloat) void,
uniformMatrix3x4fv: extern fn (location: GLint, count: GLsizei, transpose: GLboolean, value: [*c] GLfloat) void,
uniformMatrix4x3fv: extern fn (location: GLint, count: GLsizei, transpose: GLboolean, value: [*c] GLfloat) void,
colorMaski: extern fn (index: GLuint, r: GLboolean, g: GLboolean, b: GLboolean, a: GLboolean) void,
getBooleani_v: extern fn (target: GLenum, index: GLuint, data: [*c] GLboolean) void,
getIntegeri_v: extern fn (target: GLenum, index: GLuint, data: [*c] GLint) void,
enablei: extern fn (target: GLenum, index: GLuint) void,
disablei: extern fn (target: GLenum, index: GLuint) void,
isEnabledi: extern fn (target: GLenum, index: GLuint) GLboolean,
beginTransformFeedback: extern fn (primitiveMode: GLenum) void,
endTransformFeedback: extern fn () void,
bindBufferRange: extern fn (target: GLenum, index: GLuint, buffer: GLuint, offset: GLintptr, size: GLsizeiptr) void,
bindBufferBase: extern fn (target: GLenum, index: GLuint, buffer: GLuint) void,
transformFeedbackVaryings: extern fn (program: GLuint, count: GLsizei, varyings: [*c]const[*c] GLchar, bufferMode: GLenum) void,
getTransformFeedbackVarying: extern fn (program: GLuint, index: GLuint, bufSize: GLsizei, length: [*c] GLsizei, size: [*c] GLsizei, type: [*c] GLenum, name: [*c] GLchar) void,
clampColor: extern fn (target: GLenum, clamp: GLenum) void,
beginConditionalRender: extern fn (id: GLuint, mode: GLenum) void,
endConditionalRender: extern fn () void,
vertexAttribIPointer: extern fn (index: GLuint, size: GLint, type: GLenum, stride: GLsizei, pointer: ?*const c_void) void,
getVertexAttribIiv: extern fn (index: GLuint, pname: GLenum, params: [*c] GLint) void,
getVertexAttribIuiv: extern fn (index: GLuint, pname: GLenum, params: [*c] GLuint) void,
vertexAttribI1i: extern fn (index: GLuint, x: GLint) void,
vertexAttribI2i: extern fn (index: GLuint, x: GLint, y: GLint) void,
vertexAttribI3i: extern fn (index: GLuint, x: GLint, y: GLint, z: GLint) void,
vertexAttribI4i: extern fn (index: GLuint, x: GLint, y: GLint, z: GLint, w: GLint) void,
vertexAttribI1ui: extern fn (index: GLuint, x: GLuint) void,
vertexAttribI2ui: extern fn (index: GLuint, x: GLuint, y: GLuint) void,
vertexAttribI3ui: extern fn (index: GLuint, x: GLuint, y: GLuint, z: GLuint) void,
vertexAttribI4ui: extern fn (index: GLuint, x: GLuint, y: GLuint, z: GLuint, w: GLuint) void,
vertexAttribI1iv: extern fn (index: GLuint, v: [*c] GLint) void,
vertexAttribI2iv: extern fn (index: GLuint, v: [*c] GLint) void,
vertexAttribI3iv: extern fn (index: GLuint, v: [*c] GLint) void,
vertexAttribI4iv: extern fn (index: GLuint, v: [*c] GLint) void,
vertexAttribI1uiv: extern fn (index: GLuint, v: [*c] GLuint) void,
vertexAttribI2uiv: extern fn (index: GLuint, v: [*c] GLuint) void,
vertexAttribI3uiv: extern fn (index: GLuint, v: [*c] GLuint) void,
vertexAttribI4uiv: extern fn (index: GLuint, v: [*c] GLuint) void,
vertexAttribI4bv: extern fn (index: GLuint, v: [*c] GLbyte) void,
vertexAttribI4sv: extern fn (index: GLuint, v: [*c] GLshort) void,
vertexAttribI4ubv: extern fn (index: GLuint, v: [*c] GLubyte) void,
vertexAttribI4usv: extern fn (index: GLuint, v: [*c] GLushort) void,
getUniformuiv: extern fn (program: GLuint, location: GLint, params: [*c] GLuint) void,
bindFragDataLocation: extern fn (program: GLuint, color: GLuint, name: [*c] GLchar) void,
getFragDataLocation: extern fn (program: GLuint, name: [*c] GLchar) GLint,
uniform1ui: extern fn (location: GLint, v0: GLuint) void,
uniform2ui: extern fn (location: GLint, v0: GLuint, v1: GLuint) void,
uniform3ui: extern fn (location: GLint, v0: GLuint, v1: GLuint, v2: GLuint) void,
uniform4ui: extern fn (location: GLint, v0: GLuint, v1: GLuint, v2: GLuint, v3: GLuint) void,
uniform1uiv: extern fn (location: GLint, count: GLsizei, value: [*c] GLuint) void,
uniform2uiv: extern fn (location: GLint, count: GLsizei, value: [*c] GLuint) void,
uniform3uiv: extern fn (location: GLint, count: GLsizei, value: [*c] GLuint) void,
uniform4uiv: extern fn (location: GLint, count: GLsizei, value: [*c] GLuint) void,
texParameterIiv: extern fn (target: GLenum, pname: GLenum, params: [*c] GLint) void,
texParameterIuiv: extern fn (target: GLenum, pname: GLenum, params: [*c] GLuint) void,
getTexParameterIiv: extern fn (target: GLenum, pname: GLenum, params: [*c] GLint) void,
getTexParameterIuiv: extern fn (target: GLenum, pname: GLenum, params: [*c] GLuint) void,
clearBufferiv: extern fn (buffer: GLenum, drawbuffer: GLint, value: [*c] GLint) void,
clearBufferuiv: extern fn (buffer: GLenum, drawbuffer: GLint, value: [*c] GLuint) void,
clearBufferfv: extern fn (buffer: GLenum, drawbuffer: GLint, value: [*c] GLfloat) void,
clearBufferfi: extern fn (buffer: GLenum, drawbuffer: GLint, depth: GLfloat, stencil: GLint) void,
getStringi: extern fn (name: GLenum, index: GLuint) [*c] GLubyte,
drawArraysInstanced: extern fn (mode: GLenum, first: GLint, count: GLsizei, instancecount: GLsizei) void,
drawElementsInstanced: extern fn (mode: GLenum, count: GLsizei, type: GLenum, indices: ?*const c_void, instancecount: GLsizei) void,
texBuffer: extern fn (target: GLenum, internalformat: GLenum, buffer: GLuint) void,
primitiveRestartIndex: extern fn (index: GLuint) void,
